<!doctype html>
<html class="no-js" lang="{{ request.locale.iso_code }}">
<head>
  {% render 'replo-head' %}
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <meta name="theme-color" content="{{ settings.color_button }}">

  <link rel="preconnect" href="https://cdn.shopify.com" crossorigin>
  <link rel="preconnect" href="https://fonts.shopifycdn.com" crossorigin>
  <link rel="preconnect" href="https://monorail-edge.shopifysvc.com">

  {%- assign header_font = settings.type_header_font -%}
  {%- assign base_font = settings.type_base_font -%}
  {%- assign base_font_bolder = base_font | font_modify: 'weight', 'bolder' -%}
  {%- assign base_font_bold = base_font | font_modify: 'weight', 'bold' -%}
  {%- assign base_font_italic = base_font | font_modify: 'style', 'italic' -%}
  {%- assign base_font_bold_italic = base_font_bold | font_modify: 'style', 'italic' -%}

  <link rel="preload" href="{{ 'theme.css' | asset_url }}" as="style">
  <link rel="preload" as="font" href="{{ header_font | font_url }}" type="font/woff2" crossorigin>
  <link rel="preload" as="font" href="{{ base_font | font_url }}" type="font/woff2" crossorigin>
  <link rel="preload" as="font" href="{{ base_font_bold | font_url }}" type="font/woff2" crossorigin>
  <link rel="preload" href="{{ 'theme.js' | asset_url }}" as="script">
  <link rel="preload" href="{{ 'lazysizes.js' | asset_url }}" as="script">

  {%- if canonical_url != blank  -%}
    <link rel="canonical" href="{{ canonical_url }}">
  {%- endif -%}

  {%- if settings.favicon != blank -%}
    <link rel="shortcut icon" href="{{ settings.favicon | img_url: '32x32' }}" type="image/png">
  {%- endif -%}

  {%- capture seo_title -%}
    {%- if request.page_type == 'search' and search.performed == true -%}
      {{ 'general.search.heading' | t: count: search.results_count }}: {{ 'general.search.results_with_count' | t: terms: search.terms, count: search.results_count }}
    {%- else -%}
      {{ page_title }}
    {%- endif -%}
    {%- if current_tags -%}
      {%- assign meta_tags = current_tags | join: ', ' -%} &ndash; {{ 'general.meta.tags' | t: tags: meta_tags -}}
    {%- endif -%}
    {%- if current_page != 1 -%}
      &ndash; {{ 'general.meta.page' | t: page: current_page }}
    {%- endif -%}
    {%- assign escaped_page_title = page_title | escape -%}
    {%- unless escaped_page_title contains shop.name -%}
      &ndash; {{ shop.name }}
    {%- endunless -%}
  {%- endcapture -%}
  <title>{{ seo_title | strip }}</title>

  {% include 'social-meta-tags' %}
  {% include 'css-variables' %}

  <style>*,::after,::before{box-sizing:border-box}body{margin:0}body,html{background-color:var(--color-body)}body,button{font-size:calc(var(--font-size-base) * 1px);font-family:var(--font-stack-body);font-style:var(--font-style-body);font-weight:var(--font-weight-body);color:var(--color-text);line-height:1.5}body,button{-webkit-font-smoothing:antialiased;-webkit-text-size-adjust:100%}.border-bottom{border-bottom:1px solid var(--color-border)}.btn--link{background-color:transparent;border:0;margin:0;color:var(--color-text);text-align:left}.text-right{text-align:right}.icon{display:inline-block;width:20px;height:20px;vertical-align:middle;fill:currentColor}.icon__fallback-text,.visually-hidden{position:absolute!important;overflow:hidden;clip:rect(0 0 0 0);height:1px;width:1px;margin:-1px;padding:0;border:0}svg.icon:not(.icon--full-color) circle,svg.icon:not(.icon--full-color) ellipse,svg.icon:not(.icon--full-color) g,svg.icon:not(.icon--full-color) line,svg.icon:not(.icon--full-color) path,svg.icon:not(.icon--full-color) polygon,svg.icon:not(.icon--full-color) polyline,svg.icon:not(.icon--full-color) rect,symbol.icon:not(.icon--full-color) circle,symbol.icon:not(.icon--full-color) ellipse,symbol.icon:not(.icon--full-color) g,symbol.icon:not(.icon--full-color) line,symbol.icon:not(.icon--full-color) path,symbol.icon:not(.icon--full-color) polygon,symbol.icon:not(.icon--full-color) polyline,symbol.icon:not(.icon--full-color) rect{fill:inherit;stroke:inherit}li{list-style:none}.list--inline{padding:0;margin:0}.list--inline>li{display:inline-block;margin-bottom:0;vertical-align:middle}a{color:var(--color-text);text-decoration:none}.h1,.h2,h1,h2{margin:0 0 17.5px;font-family:var(--font-stack-header);font-style:var(--font-style-header);font-weight:var(--font-weight-header);line-height:1.2;overflow-wrap:break-word;word-wrap:break-word}.h1 a,.h2 a,h1 a,h2 a{color:inherit;text-decoration:none;font-weight:inherit}.h1,h1{font-size:calc(((var(--font-h1-desktop))/ (var(--font-size-base))) * 1em);text-transform:none;letter-spacing:0}@media only screen and (max-width:749px){.h1,h1{font-size:calc(((var(--font-h1-mobile))/ (var(--font-size-base))) * 1em)}}.h2,h2{font-size:calc(((var(--font-h2-desktop))/ (var(--font-size-base))) * 1em);text-transform:uppercase;letter-spacing:.1em}@media only screen and (max-width:749px){.h2,h2{font-size:calc(((var(--font-h2-mobile))/ (var(--font-size-base))) * 1em)}}p{color:var(--color-body-text);margin:0 0 19.44444px}@media only screen and (max-width:749px){p{font-size:calc(((var(--font-size-base) - 1)/ (var(--font-size-base))) * 1em)}}p:last-child{margin-bottom:0}@media only screen and (max-width:749px){.small--hide{display:none!important}}.grid{list-style:none;margin:0;padding:0;margin-left:-30px}.grid::after{content:'';display:table;clear:both}@media only screen and (max-width:749px){.grid{margin-left:-22px}}.grid::after{content:'';display:table;clear:both}.grid--no-gutters{margin-left:0}.grid--no-gutters .grid__item{padding-left:0}.grid--table{display:table;table-layout:fixed;width:100%}.grid--table>.grid__item{float:none;display:table-cell;vertical-align:middle}.grid__item{float:left;padding-left:30px;width:100%}@media only screen and (max-width:749px){.grid__item{padding-left:22px}}.grid__item[class*="--push"]{position:relative}@media only screen and (min-width:750px){.medium-up--one-quarter{width:25%}.medium-up--push-one-third{width:33.33%}.medium-up--one-half{width:50%}.medium-up--push-one-third{left:33.33%;position:relative}}.site-header{position:relative;background-color:var(--color-body)}@media only screen and (max-width:749px){.site-header{border-bottom:1px solid var(--color-border)}}@media only screen and (min-width:750px){.site-header{padding:0 55px}.site-header.logo--center{padding-top:30px}}.site-header__logo{margin:15px 0}.logo-align--center .site-header__logo{text-align:center;margin:0 auto}@media only screen and (max-width:749px){.logo-align--center .site-header__logo{text-align:left;margin:15px 0}}@media only screen and (max-width:749px){.site-header__logo{padding-left:22px;text-align:left}.site-header__logo img{margin:0}}.site-header__logo-link{display:inline-block;word-break:break-word}@media only screen and (min-width:750px){.logo-align--center .site-header__logo-link{margin:0 auto}}.site-header__logo-image{display:block}@media only screen and (min-width:750px){.site-header__logo-image{margin:0 auto}}.site-header__logo-image img{width:100%}.site-header__logo-image--centered img{margin:0 auto}.site-header__logo img{display:block}.site-header__icons{position:relative;white-space:nowrap}@media only screen and (max-width:749px){.site-header__icons{width:auto;padding-right:13px}.site-header__icons .btn--link,.site-header__icons .site-header__cart{font-size:calc(((var(--font-size-base))/ (var(--font-size-base))) * 1em)}}.site-header__icons-wrapper{position:relative;display:-webkit-flex;display:-ms-flexbox;display:flex;width:100%;-ms-flex-align:center;-webkit-align-items:center;-moz-align-items:center;-ms-align-items:center;-o-align-items:center;align-items:center;-webkit-justify-content:flex-end;-ms-justify-content:flex-end;justify-content:flex-end}.site-header__account,.site-header__cart,.site-header__search{position:relative}.site-header__search.site-header__icon{display:none}@media only screen and (min-width:1400px){.site-header__search.site-header__icon{display:block}}.site-header__search-toggle{display:block}@media only screen and (min-width:750px){.site-header__account,.site-header__cart{padding:10px 11px}}.site-header__cart-title,.site-header__search-title{position:absolute!important;overflow:hidden;clip:rect(0 0 0 0);height:1px;width:1px;margin:-1px;padding:0;border:0;display:block;vertical-align:middle}.site-header__cart-title{margin-right:3px}.site-header__cart-count{display:flex;align-items:center;justify-content:center;position:absolute;right:.4rem;top:.2rem;font-weight:700;background-color:var(--color-btn-primary);color:var(--color-btn-primary-text);border-radius:50%;min-width:1em;height:1em}.site-header__cart-count span{font-family:HelveticaNeue,"Helvetica Neue",Helvetica,Arial,sans-serif;font-size:calc(11em / 16);line-height:1}@media only screen and (max-width:749px){.site-header__cart-count{top:calc(7em / 16);right:0;border-radius:50%;min-width:calc(19em / 16);height:calc(19em / 16)}}@media only screen and (max-width:749px){.site-header__cart-count span{padding:.25em calc(6em / 16);font-size:12px}}.site-header__menu{display:none}@media only screen and (max-width:749px){.site-header__icon{display:inline-block;vertical-align:middle;padding:10px 11px;margin:0}}@media only screen and (min-width:750px){.site-header__icon .icon-search{margin-right:3px}}.announcement-bar{z-index:10;position:relative;text-align:center;border-bottom:1px solid transparent;padding:2px}.announcement-bar__link{display:block}.announcement-bar__message{display:block;padding:11px 22px;font-size:calc(((16)/ (var(--font-size-base))) * 1em);font-weight:var(--font-weight-header)}@media only screen and (min-width:750px){.announcement-bar__message{padding-left:55px;padding-right:55px}}.site-nav{position:relative;padding:0;text-align:center;margin:25px 0}.site-nav a{padding:3px 10px}.site-nav__link{display:block;white-space:nowrap}.site-nav--centered .site-nav__link{padding-top:0}.site-nav__link .icon-chevron-down{width:calc(8em / 16);height:calc(8em / 16);margin-left:.5rem}.site-nav__label{border-bottom:1px solid transparent}.site-nav__link--active .site-nav__label{border-bottom-color:var(--color-text)}.site-nav__link--button{border:none;background-color:transparent;padding:3px 10px}.site-header__mobile-nav{z-index:11;position:relative;background-color:var(--color-body)}@media only screen and (max-width:749px){.site-header__mobile-nav{display:-webkit-flex;display:-ms-flexbox;display:flex;width:100%;-ms-flex-align:center;-webkit-align-items:center;-moz-align-items:center;-ms-align-items:center;-o-align-items:center;align-items:center}}.mobile-nav--open .icon-close{display:none}.main-content{opacity:0}.main-content .shopify-section{display:none}.main-content .shopify-section:first-child{display:inherit}.critical-hidden{display:none}</style>

  <script>
    window.performance.mark('debut:theme_stylesheet_loaded.start');

    function onLoadStylesheet() {
      performance.mark('debut:theme_stylesheet_loaded.end');
      performance.measure('debut:theme_stylesheet_loaded', 'debut:theme_stylesheet_loaded.start', 'debut:theme_stylesheet_loaded.end');

      var url = "{{ 'theme.css' | asset_url }}";
      var link = document.querySelector('link[href="' + url + '"]');
      link.loaded = true;
      link.dispatchEvent(new Event('load'));
    }
  </script>

  <link rel="stylesheet" href="{{ 'theme.css' | asset_url }}" type="text/css" media="print" onload="this.media='all';onLoadStylesheet()">

  <style>
    {{ header_font | font_face: font_display: 'swap' }}
    {{ base_font | font_face: font_display: 'swap' }}
    {{ base_font_bold | font_face: font_display: 'swap' }}
    {{ base_font_bolder | font_face: font_display: 'swap' }}
    {{ base_font_italic | font_face: font_display: 'swap' }}
    {{ base_font_bold_italic | font_face: font_display: 'swap' }}
  </style>
  
  <script>
    {%- if settings.currency_code_enabled -%}
      const moneyFormat = {{ shop.money_with_currency_format | json }}
    {%- else -%}
      const moneyFormat = {{ shop.money_format | json }}
    {%- endif -%}

    var theme = {
      breakpoints: {
        medium: 750,
        large: 990,
        widescreen: 1400
      },
      strings: {
        addToCart: {{ 'products.product.add_to_cart' | t | json }},
        soldOut: {{ 'products.product.sold_out' | t | json }},
        unavailable: {{ 'products.product.unavailable' | t | json }},
        regularPrice: {{ 'products.product.regular_price' | t | json }},
        salePrice: {{ 'products.product.sale_price' | t | json }},
        sale: {{ 'products.product.on_sale' | t | json }},
        fromLowestPrice: {{ 'products.product.from_lowest_price_html' | t: lowest_price: '[price]' | json }},
        vendor: {{'products.product.vendor' | t | json }},
        showMore: {{ 'general.filters.show_more' | t | json }},
        showLess: {{ 'general.filters.show_less' | t | json }},
        searchFor: {{ 'general.search.search_for' | t | json }},
        addressError: {{ 'sections.map.address_error' | t | json }},
        addressNoResults: {{ 'sections.map.address_no_results' | t | json }},
        addressQueryLimit: {{ 'sections.map.address_query_limit_html' | t | json }},
        authError: {{ 'sections.map.auth_error_html' | t | json }},
        newWindow: {{ 'general.accessibility.link_messages.new_window' | t | json }},
        external: {{ 'general.accessibility.link_messages.external' | t | json }},
        newWindowExternal: {{ 'general.accessibility.link_messages.new_window_and_external' | t | json }},
        removeLabel: {{ 'cart.label.remove' | t: product: '[product]' | json }},
        update: {{ 'cart.label.update' | t | json }},
        quantity: {{ 'cart.label.quantity' | t | json }},
        discountedTotal: {{ 'cart.label.discounted_total' | t | json }},
        regularTotal: {{ 'cart.label.regular_total' | t | json }},
        priceColumn: {{ 'cart.label.price_column' | t | json }},
        quantityMinimumMessage: {{ 'products.product.quantity_minimum_message' | t | json }},
        cartError: {{ 'cart.general.cart_error' | t | json }},
        removedItemMessage: {{ 'cart.general.removed_item_html' | t: quantity: '[quantity]', link: '[link]' | json }},
        unitPrice: {{ 'products.product.unit_price_label' | t | json }},
        unitPriceSeparator: {{ 'general.accessibility.unit_price_separator' | t | json }},
        oneCartCount: {{ 'cart.popup.cart_count' | t: count: 1 | json }},
        otherCartCount: {{ 'cart.popup.cart_count' | t: count: '[count]' | json }},
        quantityLabel: {{ 'cart.popup.quantity_label' | t: quantity_count: '[count]' | json }},
        products: {{ 'general.search.products' | t | json }},
        loading: {{ 'general.search.loading' | t | json }},
        number_of_results: {{ 'general.search.number_of_results' | t: result_number: '[result_number]', results_count: '[results_count]' | json }},
        number_of_results_found: {{ 'general.search.number_of_results_found' | t: results_count: '[results_count]' | json }},
        one_result_found: {{ 'general.search.one_result_found' | t | json }}
      },
      moneyFormat: moneyFormat,
      moneyFormatWithCurrency: {{ shop.money_with_currency_format | json }},
      settings: {
        predictiveSearchEnabled: {{ settings.predictive_search_enabled | json }},
        predictiveSearchShowPrice: {{ settings.predictive_search_show_price | json }},
        predictiveSearchShowVendor: {{ settings.predictive_search_show_vendor | json }}
      },
      stylesheet: "{{ 'theme.css' | asset_url }}"
    };

    {%- if template == 'collection' -%}
      {%- if current_tags -%}
        {%- capture tag_handles -%}
            {%- for tag in current_tags -%}
              {{- tag | handle | append: '|' -}}
            {%- endfor -%}
        {%- endcapture -%}
      {%- endif -%}
      theme.backToCollection = {
        collection: {
          title: {{ collection.title | json }},
          link: "{{ shop.url }}{{ collection.url }}{%- if current_tags -%}/{{- tag_handles | split: '|' | join: '+' -}}{%- endif -%}"
        }
      };
      sessionStorage.setItem("backToCollection", JSON.stringify(theme.backToCollection.collection));

    {%- elsif template != 'product' -%}
      if (sessionStorage.getItem("backToCollection")) {
        sessionStorage.removeItem("backToCollection")
      }
    {%- endif -%}

    document.documentElement.className = document.documentElement.className.replace('no-js', 'js');
  </script>

  {%- if request.page_type contains 'customers/' -%}
    <script src="{{ 'shopify_common.js' | shopify_asset_url }}" defer="defer"></script>
  {%- endif -%}

  <script src="{{ 'theme.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'lazysizes.js' | asset_url }}" async="async"></script>

  <script type="text/javascript">
    if (window.MSInputMethodContext && document.documentMode) {
      var scripts = document.getElementsByTagName('script')[0];
      var polyfill = document.createElement("script");
      polyfill.defer = true;
      polyfill.src = "{{ 'ie11CustomProperties.min.js' | asset_url }}";

      scripts.parentNode.insertBefore(polyfill, scripts);
    }
  </script>

  {%- render 'header-scripts.zipifypages', renderctx: 'thm' -%}{{ content_for_header }}
  
  <script>
  {% comment %}
  // Create "window.Shoppad.apps.infiniteoptions" object if it doesn't already exist
  "Shoppad.apps.infiniteoptions".split(".").reduce(function(o, x) { if (!o[x]) {o[x] ={};} return o[x] }, window);

  // Define beforeReady callback
  window.Shoppad.apps.infiniteoptions.beforeReady = function(subscribe) {
    subscribe('appLoad', function(event) {
      Shoppad.$('.spb-productoptionswatchwrapper').contents().filter(function() {
        return this.nodeType == 3;
      }).wrap('<span class="spb-swatchtooltip"></span>');
    });
  };
  {% endcomment %}
  </script>
  
  {% render 'digismoothie-giftbox' %}
  {% render 'digismoothie-candyrack' %}
        
  {% render 'shogun-head' %}
  {% if template == 'cart' %}{% render "revy-bundle-script" %}{% endif %}
</head>
<body class="template-{{ request.page_type | handle }}">
  
  <!-- Slide Cart Edits - Start -->
<script>
  let scDiscountReward;
  let originsProducts = [];
  
  window.SLIDECART_LOADED = () => {
    // store origin discount reward and remove from rewards list
    window.SLIDECART_STATE().settings.rewards_tiers.forEach((reward, index, arr) => {
      if (reward.rewards_type === 'order_discount') {
        scDiscountReward = reward;
        arr.splice(index, 1);
      }
    });
    
    // get origin collection products
    fetch("/collections/converse/products.json")
      .then(res => res.json())
      .then(data => {
        data.products.forEach(product => {
          originsProducts.push(product.handle);
        });
        window.SLIDECART_UPDATE();
      })
  }
  
  window.SLIDECART_UPDATED = cart => {
    console.log('updated... ');
    let scDiscountRewardActive = false;
    let itemHasOrigin = false;
    
    // check if origin reward is active
    window.SLIDECART_STATE().settings.rewards_tiers.forEach(reward => {
      if (reward.rewards_type === 'order_discount') {
        scDiscountRewardActive = true;
      }
    });
    
    // check if cart items include origin products
    cart.items.forEach(item => {
      if (originsProducts.includes(item.handle)) {
        itemHasOrigin = true;
      }
    });
    
    console.log('scDiscountReward: ', scDiscountReward);
    console.log('itemHasOrigin: ', itemHasOrigin);
    console.log('scDiscountRewardActive: ', scDiscountRewardActive);
    
    if (scDiscountReward && itemHasOrigin && !scDiscountRewardActive) {
      // activate slide cart origin discount reward
      window.SLIDECART_STATE().settings.rewards_tiers.push(scDiscountReward);
    } else if (scDiscountReward && !itemHasOrigin && scDiscountRewardActive) {
      // remove slide cart origin discount reward
      window.SLIDECART_STATE().settings.rewards_tiers.forEach((reward, index, arr) => {
        if (reward.rewards_type === 'order_discount') {
          scDiscountReward = reward;
          arr.splice(index, 1);
        }
      });
      window.SLIDECART_UPDATE();
    }
  }
</script>
<!-- Slide Cart Edits - End -->

<style>/*
  #slidecarthq .free-gifts .slick-track {
    display: block;
    width: auto !important;
    transform: none !important;
}

#slidecarthq .free-gifts .slick-slide {
    display: flex;
    width: auto !important;
    flex-direction: row;
}


#slidecarthq .free-gifts-item {
   flex-direction: row;
   align-items: center;
}

#slidecarthq .free-gifts-item .free-gifts-item-body {
  text-align: left !important;
  width: min-content !important;
}

#slidecarthq .free-gifts-item-footer {
    margin-top: 0;
}

#slidecarthq .upsell-add button {
  width: max-content;
}*/

/*
#slidecarthq .upsell-item {
    display: flex;
    flex-direction: column;
    width: auto;
    height: 100%;
}

#slidecarthq .upsells-stacked {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    align-content: center;
    justify-content: center;
}  
#slidecarthq .upsells-stacked .upsell+.upsell {
    margin-top: 0px;
}

#slidecarthq .upsells-stacked div {
    width: -webkit-fill-available;
}
#slidecarthq .upsell-text {
    margin: 0;
}
#slidecarthq .upsell-item .upsell-add {
    width: auto;
}
*/
</style>
<script>
var country_code = `{{ localization.country.iso_code }}`;
  
console.log(country_code);
</script>
{% comment %}APPHQ{% endcomment %}

  {% comment %}
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script>
    axios.get("https://get.geojs.io/v1/ip/geo.json")
      .then((response) => {
        const data = response.data;
    
        window.SLIDECART_UPDATED = function () {
          console.log(data.country_code);
          if (data.country_code !== 'US') {
            SLIDECART_STATE().settings.rewards = false;
          }
        };
      })
      .catch((error) => {
        console.error("Error:", error);
      });
  </script>  
  {% endcomment %}


  <script>
/*
function setupTimer(elem, target) {
    if (!elem.innerHTML.includes('(countdown)')) return

    // setup html
    elem.innerHTML = elem.innerHTML.replace('(countdown)', '<span class="slidecart-custom-countdown"></span>')
    const countdown = elem.querySelector('.slidecart-custom-countdown')

    // setup countdown functionality
    const parseUnitTime = timestamp => ({
      hours: Math.floor(timestamp / 3600000),
      minutes: Math.floor((timestamp % 3600000) / 60000),
      seconds: Math.floor((timestamp % 60000) / 1000),
    })

    let timeLeft = target - new Date().getTime()

    const int = setInterval(() => {
      if (timeLeft <= 0) {
        // countdown.remove()
        return clearInterval(int)
      }

      timeLeft -= 1000
      const { hours, minutes, seconds } = parseUnitTime(timeLeft)
      countdown.innerText = [hours, minutes, seconds].map(time => time.toString().padStart(2, '0')).join(':')
    }, 1000)
  }

window.SLIDECART_LOADED = function(cart) {
    const btn = document.querySelectorAll("#slidecarthq .upsell-add button");
    if(btn){setInterval(function (){btn.forEach(b=>{b.childNodes[1].textContent = "Añadir"})}, 100);}

    setInterval(function clickButton() {
        click_event = new Event('click', {bubbles: true});
        btn_element = document.querySelector('button.slick-arrow.slick-next');
        if(btn_element) btn_element.dispatchEvent(click_event);
    }, 4500);

  if (!'{{ settings.slidecart_countdown_date }}') return
  const target = new Date('{{ settings.slidecart_countdown_date }}').getTime()
  const elems = document.querySelectorAll('#slidecarthq .announcements p')
  elems.forEach(e => setupTimer(e, target))
}


window.SLIDECART_OPENED = () => {

  
const calendar = document.querySelector('.identixweb-order-delivery style'); 
const style2 =   document.querySelector('.iw-calendar.iw-calander-active');
if (calendar){
calendar.style.display = "none";
}
const t = document.querySelector('p.custom_element'), foot = document.querySelector("#slidecarthq .footer button");
if(t && foot) foot.insertAdjacentElement('beforebegin',t);

    const clickListener = () => clickButtonOnce(button);
    const noteInput = document.querySelector('#slidecarthq .note-body textarea');
    const form = document.querySelector('#slidecart-checkout-form');
    const button = document.querySelector('#slidecarthq .note-trigger');
    const checkout_btn = document.querySelector("#slidecarthq  footer > button");


    function clickButtonOnce(button) {
        button.click();
        button.removeEventListener('click', clickListener);
    }
  
    if(!noteInput){
      console.log("note not opened")
      setTimeout(function () {
      button.addEventListener('DOMContentLoaded', clickListener());
      console.log("note opened")
      }, 2000);
    }
    
    function checkInput() {
        if (document.querySelector('#slidecarthq .note-body textarea').value == '') {
        checkout_btn.setAttribute('disabled', true);
        //console.log("disabled")
        } else {
        checkout_btn.removeAttribute('disabled');
        //console.log("enabled")
        }
    }

    if(checkout_btn){setInterval(checkInput, 500);}

}


function getDcCode () {
    let cookies = document.cookie?.split(";");
    let dcFound = '';
    cookies.forEach(cookie => {
      let [cookieTitle, cookieVal] = cookie.split("=");
      if (cookieTitle.trim() === "discount_code") {
        dcFound = cookieVal;
      }
    })
    return dcFound;
}


window.SLIDECART_UPDATED = ({ item_count, items }) => {
   if (!item_count || item_count === 1 && items[0].product_type === 'Slidecart - Shipping Protection') return initEmptyUpsellsScreen()
}

window.SLIDECART_UPDATED = ({item_count}) =>{
    setInterval(function (){
    const btn = document.querySelectorAll("#slidecarthq .upsell-add button");
        if(btn){btn.forEach(b=>{b.childNodes[1].textContent = "Añadir"})}
    }, 100);

  let dcCode = getDcCode();
  let scDcCode = window.SLIDECART_STATE().discountCode;
  let ScDcBoxSetting = window.SLIDECART_STATE()?.settings.discount_box;
  
  if (dcCode.length) {
    if (!scDcCode || !(scDcCode.toLowerCase() === dcCode.toLowerCase())) {
      if (!ScDcBoxSetting) {
        window.SLIDECART_STATE().settings.discount_box = true;
        window.SLIDECART_APPLY_DISCOUNT(dcCode);
      } else {
        window.SLIDECART_APPLY_DISCOUNT(dcCode);
      }
    }
  }
  
  let cartTotalPrice = window.SLIDECART_STATE().cart.total_price;
  cartTotalPrice = cartTotalPrice/100;
  
  const rewards = window.SLIDECART_STATE().settings.rewards_tiers;
  rewards.forEach(reward => {
    console.log(reward);
  });
}



let initTierAmount = [];

document.addEventListener("DOMContentLoaded", () => {
    console.log("DOM LOADED")
    const checkbox = document.querySelector("#slidecarthq input#shipping-protection");

    /*setInterval(() => {
        if (checkbox) {
            console.log(checkbox);
            checkbox.addEventListener('change', () => {
                if (checkbox.checked) {
                    console.log("updated checked");
                    SLIDECART_UPDATE();
                } else {
                    console.log("updated unchecked");
                    SLIDECART_UPDATE();
                }
            });
        }
    }, 100);
  
});


window.SLIDECART_LOADED = () => {
    //Grab default rewards_tiers
    initTierAmount = SLIDECART_STATE()?.settings?.rewards_tiers.map(reward => reward.amount) || [];  
    return initTierAmount;
};

window.SLIDECART_UPDATED = (cart) => {
    var newCart = cart;
    //Save default rewards_tiers
    const newTier = initTierAmount;

    //Grab shipping product info
    const shippingAmount = parseFloat(SLIDECART_STATE().settings.shipping_protection_amount);
    const shippingProductId = parseFloat(SLIDECART_STATE().settings.shipping_protection_product_id);
    const shippingCheck =  newCart.items.find(item => item.id === shippingProductId);

    //Check if shipping product exists in cart
    if(shippingCheck){
        SLIDECART_STATE()?.settings.rewards_tiers?.forEach((tier, index) => {
            tier.amount = newTier[index];
            tier.amount = parseFloat(tier.amount) + shippingAmount;
        });
        // Logging the modified rewards_tiers
        console.log(SLIDECART_STATE()?.settings?.rewards_tiers.map(reward => reward.amount));
    } else {
        SLIDECART_STATE()?.settings.rewards_tiers?.forEach((tier, index) => {
            tier.amount = newTier[index];
            tier.amount = parseFloat(tier.amount);
        });
        // Logging the default rewards_tiers
        console.log(SLIDECART_STATE()?.settings?.rewards_tiers.map(reward => reward.amount));
    }


    window.SLIDECART_SET_CART(newCart);

};


fetch("https://get.geojs.io/v1/ip/geo.json")
.then((res) => {return res.json();})
.then((data) => {
  window.SLIDECART_UPDATED = function() {
      const notes = {
        'fr': 'Livraison 2-5 jours offerte en France sur les commandes de + de 30€',
        'ca': 'Free Canada 4-9 day shipping on orders above 40 $CAD',
        'us': 'Free US 4-9 day shipping on orders above 40 $USD'
        }
      SLIDECART_STATE()?.announcements?.forEach((announcement, index) => {
          //console.log(data.country_code.toLowerCase());
          if (data.country_code === 'FR') {
            console.log("france")
            announcement.text = notes['fr'];
          } else if(data.country_code === 'CA') {
            console.log("canada")
            announcement.text = notes['ca'];
          } else if(data.country_code === 'US') {
            console.log("usa")
            announcement.text = notes['us'];
          } else{
            console.log("not found")
            return
          }
      });
};
})
.catch((error) => {console.error("Error:", error);});



window.SLIDECART_LOADED = function(cart) {          
  window.SLIDECART_STATE().settings.shipping_protection_enable_default = true
}
*/
</script>
{% comment %}END OF APPHQ{% endcomment %}
  
  <a class="in-page-link visually-hidden skip-link" href="#MainContent">{{ 'general.accessibility.skip_to_content' | t }}</a>

  {%- if settings.enable_ajax -%}
    {% render 'cart-popup' %}
  {%- endif -%}

  {% section 'header' %}

  <div class="page-container drawer-page-content" id="PageContainer">

    <main class="main-content js-focus-hidden" id="MainContent" role="main" tabindex="-1">
      {{ content_for_layout }}{{ locksmith_content_for_layout_addenda }}
    </main>

    {% section 'footer' %}

    {% comment  %} CBB Script {% endcomment %}
    <script src="//cdn.codeblackbelt.com/widgets/js/core/collections-add-to-cart/main.min.js?shop=juansebastian-teststore.myshopify.com" defer></script>
    {% comment  %} End CBB Script {% endcomment %}



    <div id="slideshow-info" class="visually-hidden" aria-hidden="true">
      {{- 'sections.slideshow.navigation_instructions' | t -}}
    </div>

  </div>

  <script type="application/json" data-cart-routes>
    {
      "cartUrl": "{{ routes.cart_url }}",
      "cartAddUrl": "{{ routes.cart_add_url }}",
      "cartChangeUrl": "{{ routes.cart_change_url }}"
    }
  </script>

  <ul hidden>
    <li id="a11y-refresh-page-message">{{ 'general.accessibility.refresh_page' | t }}</li>
    <li id="a11y-selection-message">{{ 'general.accessibility.selection_help' | t }}</li>
  </ul>
{% render 'back-to-the-top' %}
{% comment %}Super Bar snippet start{% endcomment %}
<div id="sabhq-root"></div>
<script>function superbarLoader(e,t){if(e){var a=document.createElement("script"),d=!1,n=document.getElementsByTagName("head")[0];a.onload=a.onreadystatechange=function(){d||this.readyState&&"loaded"!==this.readyState&&"complete"!==this.readyState||(d=!0,t(),a.onload=a.onreadystatechange=null,n&&a.parentNode&&n.removeChild(a))},a.setAttribute("type","text/javascript"),a.setAttribute("src",e),n.appendChild(a)}};superbarLoader("https://cdn.jsdelivr.net/gh/apphq/superbar-dist@master/superbar.js?"+(new Date).getTime(), function() {window.SUPERBAR_INIT({{ product | json }}, '{{ shop.money_format }}', '{{ product.selected_or_first_available_variant.id }}', {{ cart | json }}, "{{ template }}")})</script>
{% comment %}Super Bar snippet end{% endcomment %}
{% include 'ddm_calendar' %} {{ 'ddm_calendar.css' | asset_url | stylesheet_tag }}{%- render 'page-footer.zipifypages', renderctx: 'thm', ocuapp: oneclickupsellapp -%}{% include 'revy-bundle-script' %}
  <script src="//cool-image-magnifier.product-image-zoom.com/js/core/main.min.js?timestamp=1701890736&shop=juansebastian-teststore.myshopify.com" defer></script>
</body>
</html>