{% include 'product-content.zipifypages', contentprt: 'header' %}{% comment %}
  The contents of the product.liquid template can be found in /sections/product-template.liquid
{% endcomment %}

{% section 'product-template' %}
{% section 'product-recommendations' %}

<div id="backToCollection"></div>

<script>
  // Override default values of shop.strings for each template.
  // Alternate product templates can change values of
  // add to cart button, sold out, and unavailable states here.
  theme.productStrings = {
    addToCart: {{ 'products.product.add_to_cart' | t | json }},
    soldOut: {{ 'products.product.sold_out' | t | json }},
    unavailable: {{ 'products.product.unavailable' | t | json }}
  };

  if(sessionStorage.backToCollection) {
    theme.backToCollection = {};
    theme.backToCollection.collection = JSON.parse(sessionStorage.backToCollection);
    var productCollections = {{ product.collections | json }};
    var showCollection = false;
    if (productCollections) {
      productCollections.forEach(function(collection) {
        if (collection.title === theme.backToCollection.collection.title) {
          showCollection = true;
        }
      });
    }
    if(showCollection) {
      var backToCollectionHTML = '<div class="text-center return-link-wrapper page-width"><a href="' + theme.backToCollection.collection.link + '" class="btn btn--secondary btn--has-icon-before">{% include 'icon-arrow-left' %}{{ 'products.product.back_to_collection' | t }} ' + theme.backToCollection.collection.title + '</a></div>';
      var backToCollectionContainer = document.getElementById('backToCollection');
      backToCollectionContainer.insertAdjacentHTML('afterbegin', backToCollectionHTML);
    }
  }
</script>

{% assign current_variant = product.selected_or_first_available_variant %}

<script type="application/ld+json">
{
  "@context": "http://schema.org/",
  "@type": "Product",
  "name": {{ product.title | json }},
  "url": {{ shop.url | append: product.url | json }},
  {%- if product.featured_media -%}
    {%- assign media_size = product.featured_media.preview_image.width | append: 'x' -%}
    "image": [
      {{ product.featured_media | img_url: media_size | prepend: "https:" | json }}
    ],
  {%- endif -%}
  "description": {{ product.description | strip_html | json }},
  {%- if current_variant.sku != blank -%}
    "sku": {{ current_variant.sku | json }},
  {%- endif -%}
  "brand": {
    "@type": "Thing",
    "name": {{ product.vendor | json }}
  },
  "offers": [
    {%- for variant in product.variants -%}
      {
        "@type" : "Offer",
        {%- if variant.sku != blank -%}
          "sku": {{ variant.sku | json }},
        {%- endif -%}
        "availability" : "http://schema.org/{% if variant.available %}InStock{% else %}OutOfStock{% endif %}",
        "price" : {{ variant.price | divided_by: 100.00 | json }},
        "priceCurrency" : {{ cart.currency.iso_code | json }},
        "url" : {{ shop.url | append: variant.url | json }}
      }{% unless forloop.last %},{% endunless %}
    {%- endfor -%}
  ]
}
</script>

<!-- Infinite Options by ShopPad -->
<script>

// OPTION 2
// Change text input required error messages
window.Shoppad = window.Shoppad || {},     
window.Shoppad.apps = window.Shoppad.apps || {},     
window.Shoppad.apps.infiniteoptions = window.Shoppad.apps.infiniteoptions || {},     
window.Shoppad.apps.infiniteoptions.strings = window.Shoppad.apps.infiniteoptions.strings || {},   
window.Shoppad.apps.infiniteoptions.strings.errorMessages = window.Shoppad.apps.infiniteoptions.strings.errorMessages || {}, 
// The string
window.Shoppad.apps.infiniteoptions.strings.errorMessages.forTextInputs = "Please add your personalized text before adding this item to cart.";
</script>

<script>
$(function() {
  $(document).on('previewSuccess', 'form[data-uploadery]', function(e) {
    if (e.originalEvent.detail.preview === '') {
      return;
    }
    var $title = $('<p></p>').html('Preview:');
    var $img = $('<img/>').attr('src', e.originalEvent.detail.preview);
    var $uploaderyResponse = $('<div></div>').attr('class', 'uploaderyResponse').html([$title, $img]);
    $(e.target).next('.uploaderyResponse').remove();
    $(e.target).after($uploaderyResponse);
  });
});
</script>


<!--Uploadery app by ShopPad -->
<script>
// Change the error messages
window.Shoppad = window.Shoppad || {},     
window.Shoppad.apps = window.Shoppad.apps || {},     
window.Shoppad.apps.uploadery = window.Shoppad.apps.uploadery || {},     
window.Shoppad.apps.uploadery.strings = window.Shoppad.apps.uploadery.strings || {},   
// The strings
window.Shoppad.apps.uploadery.strings = {
  unacceptedFileType: "This file format is not allowed. Please upload an image in PNG format",
  exceedsFileSize: "Sorry, this file size is too large",
  exceedsImageMaxWidth: "Sorry, this image width is too wide",
  exceedsImageMaxHeight: "Sorry, this image height is too tall",
  exceedsImageMinWidth: "Sorry, this image width is too small",
  exceedsImageMinHeight: "Sorry, this image height is too short",
  incorrectAspectRatio: "Sorry, this image is not in the correct aspect ratio, it must be: {{aspect_ratio}}",
  requiredFieldMessage: "Please upload your file(s) before adding to cart."
};
</script>


<script>
Shoppad.$(function() {
  Shoppad.$(document).on('uploadSuccess', 'form[data-uploadery]', function(e) {
    $(e.target).addClass('upload-complete');
  });
});
</script>{% include 'product-content.zipifypages', contentprt: 'footer' %}